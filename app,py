from flask import Flask
from flask import render_template
import pandas as pd

app = Flask(__name__)


@app.route('/')
def home():
    return render_template('home.html')

@app.route('/data/<choice>')
def showdata(choice):

    # Data Retrieval (4 types 21-22)
    # first file format is different
    url1="https://www.cleanenergyregulator.gov.au/DocumentAssets/Documents/National%20Greenhouse%20and%20Energy%20Register%20controlling%20corporations%202021-22.csv"
    urls1 = [
        "https://www.cleanenergyregulator.gov.au/DocumentAssets/Documents/National%20Greenhouse%20and%20Energy%20Register%20RTC%20holders%202021-22.csv",
        "https://www.cleanenergyregulator.gov.au/DocumentAssets/Documents/National%20Greenhouse%20and%20Energy%20Register%20corporations%20deregistered%202021-22.csv",
        "https://www.cleanenergyregulator.gov.au/DocumentAssets/Documents/National%20Greenhouse%20and%20Energy%20Register%20responsible%20emitters%202021-22.csv"]
    
    df_list = [pd.read_csv(url,encoding='unicode_escape') for url in urls1]
    df1=pd.read_csv(url1,header=3)
    
    title1="National Greenhouse and Energy Register controlling corporations 2021-22"
    title2="National Greenhouse and Energy Register RTC holders 2021-22"
    title3="National Greenhouse and Energy Register corporations deregistered 2021-22"
    title4="National Greenhouse and Energy Register responsible emitters 2021-22"

    # Prepare data for display
    data1 = df1.to_html()
    data2 = df_list[0].to_html()
    data3 = df_list[1].to_html()
    data4 = df_list[2].to_html()

    # print(data)
    # Render the template with the processed data
    if(choice=="set1"):
        return render_template('showdata.html', head=title1,tables=[data1], titles=[''])
    elif(choice == "set2"):   
        return render_template('showdata.html', head=title2,tables=[data2], titles=[''])
    elif(choice == "set3"):   
        return render_template('showdata.html', head=title3,tables=[data3], titles=[''])
    elif(choice == "set4"):   
        return render_template('showdata.html', head=title4,tables=[data4], titles=[''])
    else:
        return redirect(url_for('/data/analyse'))


@app.route('/data/analyse')
def analyse():
    # Data Retrieval (4 types 21-22)
    url1="https://www.cleanenergyregulator.gov.au/DocumentAssets/Documents/National%20Greenhouse%20and%20Energy%20Register%20controlling%20corporations%202021-22.csv"
    urls = [
        "https://www.cleanenergyregulator.gov.au/DocumentAssets/Documents/National%20Greenhouse%20and%20Energy%20Register%20RTC%20holders%202021-22.csv",
        "https://www.cleanenergyregulator.gov.au/DocumentAssets/Documents/National%20Greenhouse%20and%20Energy%20Register%20corporations%20deregistered%202021-22.csv",
        "https://www.cleanenergyregulator.gov.au/DocumentAssets/Documents/National%20Greenhouse%20and%20Energy%20Register%20responsible%20emitters%202021-22.csv",
    # Data Retrieval (4 types 20-21)
        "https://www.cleanenergyregulator.gov.au/DocumentAssets/Documents/National%20Greenhouse%20and%20Energy%20Register%20controlling%20corporations%202020-21.csv",
        "https://www.cleanenergyregulator.gov.au/DocumentAssets/Documents/National%20Greenhouse%20and%20Energy%20Register%20RTC%20holders%202020-21.csv",
        "https://www.cleanenergyregulator.gov.au/DocumentAssets/Documents/National%20Greenhouse%20and%20Energy%20Register%20corporations%20deregistered%202020-21.csv",
        "https://www.cleanenergyregulator.gov.au/DocumentAssets/Documents/National%20Greenhouse%20and%20Energy%20Register%20responsible%20emitters%202020-21.csv",
     # Data Retrieval (4 types 19-20)
        "https://www.cleanenergyregulator.gov.au/DocumentAssets/Documents/National%20Greenhouse%20and%20Energy%20Register%20controlling%20corporations%202019-20.csv",
        "https://www.cleanenergyregulator.gov.au/DocumentAssets/Documents/National%20Greenhouse%20and%20Energy%20Register%20RTC%20holders%202019-20.csv",
        "https://www.cleanenergyregulator.gov.au/DocumentAssets/Documents/National%20Greenhouse%20and%20Energy%20Register%20corporations%20deregistered%202019-20.csv",
        "https://www.cleanenergyregulator.gov.au/DocumentAssets/Documents/National%20Greenhouse%20and%20Energy%20Register%20responsible%20emitters%202019-20.csv",
     
    # Data Retrieval (4 types 18-19)
        "https://www.cleanenergyregulator.gov.au/DocumentAssets/Documents/Extract%20of%20the%20National%20Greenhouse%20and%20Energy%20Register%202018-19.csv",
        "https://www.cleanenergyregulator.gov.au/DocumentAssets/Documents/Extract%20of%20the%20National%20Greenhouse%20and%20Energy%20Register%20RTC%20holders%202018-19.csv",
        "https://www.cleanenergyregulator.gov.au/DocumentAssets/Documents/Extract%20of%20the%20National%20Greenhouse%20and%20Energy%20Register%20corporations%20deregistered%202018-19.csv",
        "https://www.cleanenergyregulator.gov.au/DocumentAssets/Documents/Extract%20of%20the%20National%20Greenhouse%20and%20Energy%20Register%20responsible%20emitters%202018-19.csv",

     # Data Retrieval (4 types 17-18)
        "https://www.cleanenergyregulator.gov.au/DocumentAssets/Documents/Extract%20of%20the%20National%20Greenhouse%20and%20Energy%20Register%202017-18.csv",
        "https://www.cleanenergyregulator.gov.au/DocumentAssets/Documents/Extract%20of%20the%20National%20Greenhouse%20and%20Energy%20Register%20RTC%20holders%202017-18.csv",
        "https://www.cleanenergyregulator.gov.au/DocumentAssets/Documents/Extract%20of%20the%20National%20Greenhouse%20and%20Energy%20Register%20corporations%20deregistered%202017-18.csv",
        "https://www.cleanenergyregulator.gov.au/DocumentAssets/Documents/Extract%20of%20the%20National%20Greenhouse%20and%20Energy%20Register%20responsible%20emitters%202017-18.csv"
    ]
    
    df_list = [pd.read_csv(url,encoding='unicode_escape') for url in urls]
    df1=pd.read_csv(url1,header=3)

    # Data Processing
    # Perform any data processing or analysis tasks here
    # 1.calcualte the num, percentage and trend
    sum=len(df1.index)+len(df_list[0].index)+len(df_list[1].index)+len(df_list[2].index)

    data={
    "values":[len(df1.index),len(df_list[0].index),len(df_list[1].index),len(df_list[2].index)],
    "types":["Controlling corporations","RTC holders","Corporations deregistered","Responsible emitters"],
    "props":[round(len(df1.index)/sum,5),round(len(df_list[0].index)/sum,5),round(len(df_list[1].index)/sum,5),round(len(df_list[2].index)/sum,5)],
    "trends":{"controlling corporations":[len(df_list[15].index),len(df_list[11].index),len(df_list[7].index),len(df_list[3].index),len(df1.index)],
              "RTC holders":[len(df_list[16].index),len(df_list[12].index),len(df_list[8].index),len(df_list[4].index),len(df_list[0].index)],
              "corporations deregistered":[len(df_list[17].index),len(df_list[13].index),len(df_list[9].index),len(df_list[5].index),len(df_list[1].index)],
              "responsible emitters":[len(df_list[18].index),len(df_list[14].index),len(df_list[10].index),len(df_list[6].index),len(df_list[2].index)]}

    }
    # print(data["trends"]["controlling corporations"])
    return render_template('analyse.html', data=data)




if __name__ == '__main__':
    app.run()
